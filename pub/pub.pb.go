// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.2.0
// source: pub.proto

package pub

import (
	context "context"
	_ "github.com/golang/protobuf/protoc-gen-go/descriptor"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Doctor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Age         int64  `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	Contact     string `protobuf:"bytes,3,opt,name=contact,proto3" json:"contact,omitempty"`
	Createdat   string `protobuf:"bytes,4,opt,name=createdat,proto3" json:"createdat,omitempty"`
	Deletedat   string `protobuf:"bytes,5,opt,name=deletedat,proto3" json:"deletedat,omitempty"`
	Email       string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Id          int64  `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Nationality string `protobuf:"bytes,9,opt,name=nationality,proto3" json:"nationality,omitempty"`
	Nic         string `protobuf:"bytes,10,opt,name=nic,proto3" json:"nic,omitempty"`
	Updatedat   string `protobuf:"bytes,11,opt,name=updatedat,proto3" json:"updatedat,omitempty"`
}

func (x *Doctor) Reset() {
	*x = Doctor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Doctor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Doctor) ProtoMessage() {}

func (x *Doctor) ProtoReflect() protoreflect.Message {
	mi := &file_pub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Doctor.ProtoReflect.Descriptor instead.
func (*Doctor) Descriptor() ([]byte, []int) {
	return file_pub_proto_rawDescGZIP(), []int{0}
}

func (x *Doctor) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Doctor) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Doctor) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *Doctor) GetCreatedat() string {
	if x != nil {
		return x.Createdat
	}
	return ""
}

func (x *Doctor) GetDeletedat() string {
	if x != nil {
		return x.Deletedat
	}
	return ""
}

func (x *Doctor) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Doctor) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Doctor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Doctor) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *Doctor) GetNic() string {
	if x != nil {
		return x.Nic
	}
	return ""
}

func (x *Doctor) GetUpdatedat() string {
	if x != nil {
		return x.Updatedat
	}
	return ""
}

type DoctorvmDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Age         int64  `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	Contact     string `protobuf:"bytes,3,opt,name=contact,proto3" json:"contact,omitempty"`
	Createdat   string `protobuf:"bytes,4,opt,name=createdat,proto3" json:"createdat,omitempty"`
	Deletedat   string `protobuf:"bytes,5,opt,name=deletedat,proto3" json:"deletedat,omitempty"`
	Email       string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Id          int64  `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Nationality string `protobuf:"bytes,9,opt,name=nationality,proto3" json:"nationality,omitempty"`
	Nic         string `protobuf:"bytes,10,opt,name=nic,proto3" json:"nic,omitempty"`
	Updatedat   string `protobuf:"bytes,11,opt,name=updatedat,proto3" json:"updatedat,omitempty"`
}

func (x *DoctorvmDto) Reset() {
	*x = DoctorvmDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoctorvmDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoctorvmDto) ProtoMessage() {}

func (x *DoctorvmDto) ProtoReflect() protoreflect.Message {
	mi := &file_pub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoctorvmDto.ProtoReflect.Descriptor instead.
func (*DoctorvmDto) Descriptor() ([]byte, []int) {
	return file_pub_proto_rawDescGZIP(), []int{1}
}

func (x *DoctorvmDto) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DoctorvmDto) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *DoctorvmDto) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *DoctorvmDto) GetCreatedat() string {
	if x != nil {
		return x.Createdat
	}
	return ""
}

func (x *DoctorvmDto) GetDeletedat() string {
	if x != nil {
		return x.Deletedat
	}
	return ""
}

func (x *DoctorvmDto) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DoctorvmDto) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DoctorvmDto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DoctorvmDto) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *DoctorvmDto) GetNic() string {
	if x != nil {
		return x.Nic
	}
	return ""
}

func (x *DoctorvmDto) GetUpdatedat() string {
	if x != nil {
		return x.Updatedat
	}
	return ""
}

type Patient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Age         int64  `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	Contact     string `protobuf:"bytes,3,opt,name=contact,proto3" json:"contact,omitempty"`
	Createdat   string `protobuf:"bytes,4,opt,name=createdat,proto3" json:"createdat,omitempty"`
	Deletedat   string `protobuf:"bytes,5,opt,name=deletedat,proto3" json:"deletedat,omitempty"`
	Doctor      string `protobuf:"bytes,6,opt,name=doctor,proto3" json:"doctor,omitempty"`
	Email       string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Id          int64  `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	Nationality string `protobuf:"bytes,10,opt,name=nationality,proto3" json:"nationality,omitempty"`
	Nic         string `protobuf:"bytes,11,opt,name=nic,proto3" json:"nic,omitempty"`
	Updatedat   string `protobuf:"bytes,12,opt,name=updatedat,proto3" json:"updatedat,omitempty"`
}

func (x *Patient) Reset() {
	*x = Patient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Patient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Patient) ProtoMessage() {}

func (x *Patient) ProtoReflect() protoreflect.Message {
	mi := &file_pub_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Patient.ProtoReflect.Descriptor instead.
func (*Patient) Descriptor() ([]byte, []int) {
	return file_pub_proto_rawDescGZIP(), []int{2}
}

func (x *Patient) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Patient) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Patient) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *Patient) GetCreatedat() string {
	if x != nil {
		return x.Createdat
	}
	return ""
}

func (x *Patient) GetDeletedat() string {
	if x != nil {
		return x.Deletedat
	}
	return ""
}

func (x *Patient) GetDoctor() string {
	if x != nil {
		return x.Doctor
	}
	return ""
}

func (x *Patient) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Patient) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Patient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Patient) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *Patient) GetNic() string {
	if x != nil {
		return x.Nic
	}
	return ""
}

func (x *Patient) GetUpdatedat() string {
	if x != nil {
		return x.Updatedat
	}
	return ""
}

type CreateDoctorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doctor *Doctor `protobuf:"bytes,1,opt,name=doctor,proto3" json:"doctor,omitempty"`
}

func (x *CreateDoctorRequest) Reset() {
	*x = CreateDoctorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDoctorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDoctorRequest) ProtoMessage() {}

func (x *CreateDoctorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pub_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDoctorRequest.ProtoReflect.Descriptor instead.
func (*CreateDoctorRequest) Descriptor() ([]byte, []int) {
	return file_pub_proto_rawDescGZIP(), []int{3}
}

func (x *CreateDoctorRequest) GetDoctor() *Doctor {
	if x != nil {
		return x.Doctor
	}
	return nil
}

type CreatePatientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Patient *Patient `protobuf:"bytes,1,opt,name=patient,proto3" json:"patient,omitempty"`
}

func (x *CreatePatientRequest) Reset() {
	*x = CreatePatientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePatientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePatientRequest) ProtoMessage() {}

func (x *CreatePatientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pub_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePatientRequest.ProtoReflect.Descriptor instead.
func (*CreatePatientRequest) Descriptor() ([]byte, []int) {
	return file_pub_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePatientRequest) GetPatient() *Patient {
	if x != nil {
		return x.Patient
	}
	return nil
}

var File_pub_proto protoreflect.FileDescriptor

var file_pub_proto_rawDesc = []byte{
	0x0a, 0x09, 0x70, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x70, 0x75, 0x62,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x96, 0x02, 0x0a, 0x06, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x61, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x61, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x63,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x61, 0x74, 0x22, 0x9b, 0x02, 0x0a, 0x0b, 0x44, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x76, 0x6d, 0x44, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x61, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x63, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x61, 0x74, 0x22, 0xaf, 0x02, 0x0a, 0x07, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x63,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x61, 0x74, 0x22, 0x3a, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x64,
	0x6f, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x3e, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x75, 0x62, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x32, 0xb2, 0x01, 0x0a, 0x03, 0x50, 0x75, 0x62, 0x12, 0x52, 0x0a,
	0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x2e,
	0x70, 0x75, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x44, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x0b, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x3a, 0x06, 0x64, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x57, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e,
	0x70, 0x75, 0x62, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x1d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x22, 0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x3a, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pub_proto_rawDescOnce sync.Once
	file_pub_proto_rawDescData = file_pub_proto_rawDesc
)

func file_pub_proto_rawDescGZIP() []byte {
	file_pub_proto_rawDescOnce.Do(func() {
		file_pub_proto_rawDescData = protoimpl.X.CompressGZIP(file_pub_proto_rawDescData)
	})
	return file_pub_proto_rawDescData
}

var file_pub_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pub_proto_goTypes = []interface{}{
	(*Doctor)(nil),               // 0: pub.Doctor
	(*DoctorvmDto)(nil),          // 1: pub.DoctorvmDto
	(*Patient)(nil),              // 2: pub.Patient
	(*CreateDoctorRequest)(nil),  // 3: pub.CreateDoctorRequest
	(*CreatePatientRequest)(nil), // 4: pub.CreatePatientRequest
}
var file_pub_proto_depIdxs = []int32{
	0, // 0: pub.CreateDoctorRequest.doctor:type_name -> pub.Doctor
	2, // 1: pub.CreatePatientRequest.patient:type_name -> pub.Patient
	3, // 2: pub.Pub.CreateDoctor:input_type -> pub.CreateDoctorRequest
	4, // 3: pub.Pub.CreatePatient:input_type -> pub.CreatePatientRequest
	0, // 4: pub.Pub.CreateDoctor:output_type -> pub.Doctor
	2, // 5: pub.Pub.CreatePatient:output_type -> pub.Patient
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pub_proto_init() }
func file_pub_proto_init() {
	if File_pub_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pub_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Doctor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pub_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoctorvmDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pub_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Patient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pub_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDoctorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pub_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePatientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pub_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pub_proto_goTypes,
		DependencyIndexes: file_pub_proto_depIdxs,
		MessageInfos:      file_pub_proto_msgTypes,
	}.Build()
	File_pub_proto = out.File
	file_pub_proto_rawDesc = nil
	file_pub_proto_goTypes = nil
	file_pub_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PubClient is the client API for Pub service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PubClient interface {
	CreateDoctor(ctx context.Context, in *CreateDoctorRequest, opts ...grpc.CallOption) (*Doctor, error)
	CreatePatient(ctx context.Context, in *CreatePatientRequest, opts ...grpc.CallOption) (*Patient, error)
}

type pubClient struct {
	cc grpc.ClientConnInterface
}

func NewPubClient(cc grpc.ClientConnInterface) PubClient {
	return &pubClient{cc}
}

func (c *pubClient) CreateDoctor(ctx context.Context, in *CreateDoctorRequest, opts ...grpc.CallOption) (*Doctor, error) {
	out := new(Doctor)
	err := c.cc.Invoke(ctx, "/pub.Pub/CreateDoctor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pubClient) CreatePatient(ctx context.Context, in *CreatePatientRequest, opts ...grpc.CallOption) (*Patient, error) {
	out := new(Patient)
	err := c.cc.Invoke(ctx, "/pub.Pub/CreatePatient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PubServer is the server API for Pub service.
type PubServer interface {
	CreateDoctor(context.Context, *CreateDoctorRequest) (*Doctor, error)
	CreatePatient(context.Context, *CreatePatientRequest) (*Patient, error)
}

// UnimplementedPubServer can be embedded to have forward compatible implementations.
type UnimplementedPubServer struct {
}

func (*UnimplementedPubServer) CreateDoctor(context.Context, *CreateDoctorRequest) (*Doctor, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDoctor not implemented")
}
func (*UnimplementedPubServer) CreatePatient(context.Context, *CreatePatientRequest) (*Patient, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePatient not implemented")
}

func RegisterPubServer(s *grpc.Server, srv PubServer) {
	s.RegisterService(&_Pub_serviceDesc, srv)
}

func _Pub_CreateDoctor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDoctorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PubServer).CreateDoctor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pub.Pub/CreateDoctor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PubServer).CreateDoctor(ctx, req.(*CreateDoctorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pub_CreatePatient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePatientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PubServer).CreatePatient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pub.Pub/CreatePatient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PubServer).CreatePatient(ctx, req.(*CreatePatientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Pub_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pub.Pub",
	HandlerType: (*PubServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDoctor",
			Handler:    _Pub_CreateDoctor_Handler,
		},
		{
			MethodName: "CreatePatient",
			Handler:    _Pub_CreatePatient_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pub.proto",
}
